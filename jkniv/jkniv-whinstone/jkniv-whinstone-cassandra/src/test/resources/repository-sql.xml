<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<statements 
  xmlns="http://jkniv.sf.net/schema/sqlegance/statements" 
  xmlns:cache="http://jkniv.sf.net/schema/sqlegance/cache"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xsi:schemaLocation="http://jkniv.sf.net/schema/sqlegance/statements
       http://jkniv.sf.net/schema/sqlegance/sqlegance-stmt.xsd
       http://jkniv.sf.net/schema/sqlegance/cache
       http://jkniv.sf.net/schema/sqlegance/sqlegance-cache.xsd">

  
  <cache:cache-manager delay="600" period="600" ttl="300" tti="120" size="10000">
    <cache:policy name="cached"/>
  </cache:cache-manager>
  
  <include href="/repository-sql-update.xml"/>
  <include href="/repository-sql-IN.xml" />
  <include href="/repository-sql-scalar.xml" />
  <include href="/repository-sql-cache.xml" />
  
  <select id="all" returnType="net.sf.jkniv.whinstone.cassandra.model.MxtData">
  select * from TRACKABLE_DATA
  </select>

  <insert id="removeAll">
    delete from dev_data_3t.TEST_DATA
  </insert>

  <insert id="simpleInsert">
    INSERT INTO dev_data_3t.TEST_DATA (my_key,evt_date,object_id, lat, lng, warn)
    values (?,?,?,?,?,?)
  </insert>

  <insert id="Vehicle#add">
   INSERT INTO VEHICLE(plate, name, color, alarms) VALUES (:plate, :name, :color, :alarms)
  </insert>

  <delete id="Vehicle#remove">
   DELETE FROM VEHICLE where plate = :plate
  </delete>

  <select id="Vehicle#get" returnType="net.sf.jkniv.whinstone.cassandra.model.Vehicle">
   SELECT plate, name, color, alarms FROM VEHICLE where plate = :plate
  </select>
  
  <insert id="vehicle">
   INSERT INTO VEHICLE(plate, name, color, alarms) VALUES (:plate, :name, :color, :alarms)
  </insert>

  <select id="selectVehicle" returnType="net.sf.jkniv.whinstone.cassandra.model.Vehicle">
   select plate, name, color, alarms from VEHICLE where plate = :plate
  </select>

  <select id="simpleSelect" returnType="java.util.HashMap">
    select my_key,evt_date,object_id,lat, lng, warn from dev_data_3t.TEST_DATA
  </select>

  <select id="all-vehicles" returnType="java.util.HashMap">
    select plate, name, color, alarms from VEHICLE
  </select>

  <select id="selectClauseIN">
    select * from COLOR where name in (:in:names)
  </select>

  <select id="vehiclesInNames" returnType="net.sf.jkniv.whinstone.cassandra.model.Vehicle">
  select plate, name, color, alarms from VEHICLE
    where name in (:in:names) ALLOW FILTERING
  </select>

  <select id="vehicles" returnType="net.sf.jkniv.whinstone.cassandra.model.Vehicle">
  select plate, name, color, alarms from VEHICLE
  <if test="plates != null">
    where plate in (:in:plates)
  </if>
  </select>
</statements>