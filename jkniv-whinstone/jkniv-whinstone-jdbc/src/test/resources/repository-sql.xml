<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<statements 
  xmlns="http://jkniv.sf.net/schema/sqlegance/statements"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xsi:schemaLocation="http://jkniv.sf.net/schema/sqlegance/statements
       http://jkniv.sf.net/schema/sqlegance/sqlegance-stmt.xsd">
  
    
  <select id="listBooksNoSpecificType" type="NATIVE">
    select b.ID as id, b.ISBN as isbn, b.NAME as name 
    from BOOK b
  </select>

  <select id="getBookToOverloadType" type="NATIVE" returnType="net.sf.jkniv.whinstone.jdbc.domain.acme.FlatBook">
    select b.ID as id, b.ISBN as isbn, b.NAME as name 
    from 
     BOOK b
  </select>

  <select id="getBookByISBN" type="NATIVE" returnType="net.sf.jkniv.whinstone.jdbc.domain.acme.FlatBook">
    select b.ID as id, b.ISBN as isbn, b.NAME as name, a.name as author, a.ID as author_id 
    from 
     BOOK b
    inner join AUTHOR a on a.ID = b.AUTHOR_ID
    <where>
      <if test="[0] != null">
       b.ISBN = ?
      </if>
    </where>
  </select>
  <select id="getBookByISBNWithMap" type="NATIVE" returnType="net.sf.jkniv.whinstone.jdbc.domain.acme.FlatBook">
    select b.ID as id, b.ISBN as isbn, b.NAME as name, a.name as author 
    from 
     BOOK b
    inner join AUTHOR a on a.ID = b.AUTHOR_ID
    <where>
      <if test="isbn != null">
       b.ISBN = :isbn
      </if>
    </where>
  </select>

  <select id="getAuthorWithTwoDots" type="NATIVE" returnType="net.sf.jkniv.whinstone.jdbc.domain.acme.FlatAuthor">
    select 
      id, name
    from author a where a.id = :id
  </select>
  <select id="getAuthorWithHashParam" type="NATIVE" returnType="net.sf.jkniv.whinstone.jdbc.domain.acme.FlatAuthor">
    select 
      id, name
    from author a where a.id = #{id}
  </select>
  <select id="getAllBooks" type="NATIVE" returnType="net.sf.jkniv.whinstone.jdbc.domain.acme.FlatBook">
    select b.ID as id, b.ISBN as isbn, b.NAME as name, a.name as author 
    from 
     BOOK b
    inner join AUTHOR a on a.ID = b.AUTHOR_ID
  </select>
      
  <insert type="NATIVE" id="FlatBook#add">
  INSERT INTO BOOK(ID, ISBN, NAME, AUTHOR_ID) VALUES (:id, :isbn, :name, :authorId)
  </insert>

  <update type="NATIVE" id="FlatAuthor-update">
    update author set name = :name where id = :id
  </update>

  <delete type="NATIVE" id="FlatBook-remove">
    delete from book where id = :id
  </delete>
  
</statements>